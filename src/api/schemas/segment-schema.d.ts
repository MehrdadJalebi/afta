/**
 * This file was auto-generated by openapi-typescript.
 * Do not make direct changes to the file.
 */

export interface paths {
  "/v1/contacts/sms/base/": {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    get: operations["contacts_sms_base_list"]
    put?: never
    post?: never
    delete?: never
    options?: never
    head?: never
    patch?: never
    trace?: never
  }
  "/v1/contacts/sms/base/{id}/": {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    get?: never
    put?: never
    post?: never
    delete: operations["contacts_sms_base_destroy"]
    options?: never
    head?: never
    patch?: never
    trace?: never
  }
  "/v1/contacts/sms/base/aggregated-segments-size-and-pages/": {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    get?: never
    put?: never
    post: operations["contacts_sms_base_aggregated_segments_size_and_pages_create"]
    delete?: never
    options?: never
    head?: never
    patch?: never
    trace?: never
  }
  "/v1/contacts/sms/base/bulk-retrieve/": {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    get: operations["contacts_sms_base_bulk_retrieve_retrieve"]
    put?: never
    post?: never
    delete?: never
    options?: never
    head?: never
    patch?: never
    trace?: never
  }
  "/v1/contacts/sms/base/update-size/": {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    get?: never
    put?: never
    /** @description Copy contacts of the given contact lists to the target list. */
    post: operations["contacts_sms_base_update_size_create"]
    delete?: never
    options?: never
    head?: never
    patch?: never
    trace?: never
  }
  "/v1/contacts/sms/contact/": {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    get: operations["contacts_sms_contact_list"]
    put?: never
    post: operations["contacts_sms_contact_create"]
    delete?: never
    options?: never
    head?: never
    patch?: never
    trace?: never
  }
  "/v1/contacts/sms/contact-attribute/": {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    get: operations["contacts_sms_contact_attribute_list"]
    put?: never
    post: operations["contacts_sms_contact_attribute_create"]
    delete?: never
    options?: never
    head?: never
    patch?: never
    trace?: never
  }
  "/v1/contacts/sms/contact-attribute/{id}/": {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    get: operations["contacts_sms_contact_attribute_retrieve"]
    put?: never
    post?: never
    delete?: never
    options?: never
    head?: never
    patch?: never
    trace?: never
  }
  "/v1/contacts/sms/contact-detail/": {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    get: operations["contacts_sms_contact_detail_list"]
    put?: never
    post: operations["contacts_sms_contact_detail_create"]
    delete?: never
    options?: never
    head?: never
    patch?: never
    trace?: never
  }
  "/v1/contacts/sms/contact-detail/{id}/": {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    get: operations["contacts_sms_contact_detail_retrieve"]
    put: operations["contacts_sms_contact_detail_update"]
    post?: never
    delete: operations["contacts_sms_contact_detail_destroy"]
    options?: never
    head?: never
    patch: operations["contacts_sms_contact_detail_partial_update"]
    trace?: never
  }
  "/v1/contacts/sms/contact/{id}/": {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    get: operations["contacts_sms_contact_retrieve"]
    put: operations["contacts_sms_contact_update"]
    post?: never
    delete: operations["contacts_sms_contact_destroy"]
    options?: never
    head?: never
    patch: operations["contacts_sms_contact_partial_update"]
    trace?: never
  }
  "/v1/contacts/sms/contact/copy/": {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    get?: never
    put?: never
    post: operations["contacts_sms_contact_copy_create"]
    delete?: never
    options?: never
    head?: never
    patch?: never
    trace?: never
  }
  "/v1/contacts/sms/contact/delete/": {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    get?: never
    put?: never
    post: operations["contacts_sms_contact_delete_create"]
    delete?: never
    options?: never
    head?: never
    patch?: never
    trace?: never
  }
  "/v1/contacts/sms/contact/download-csv/": {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    get?: never
    put?: never
    post: operations["contacts_sms_contact_download_csv_create"]
    delete?: never
    options?: never
    head?: never
    patch?: never
    trace?: never
  }
  "/v1/contacts/sms/contact/move/": {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    get?: never
    put?: never
    post: operations["contacts_sms_contact_move_create"]
    delete?: never
    options?: never
    head?: never
    patch?: never
    trace?: never
  }
  "/v1/contacts/sms/lists/": {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    get: operations["contacts_sms_lists_list"]
    put?: never
    post: operations["contacts_sms_lists_create"]
    delete?: never
    options?: never
    head?: never
    patch?: never
    trace?: never
  }
  "/v1/contacts/sms/lists/{id}/": {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    get: operations["contacts_sms_lists_retrieve"]
    put: operations["contacts_sms_lists_update"]
    post?: never
    delete: operations["contacts_sms_lists_destroy"]
    options?: never
    head?: never
    patch: operations["contacts_sms_lists_partial_update"]
    trace?: never
  }
  "/v1/contacts/sms/lists/move/": {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    get?: never
    /** @description Move contacts of the given contact lists to the target list. */
    put: operations["contacts_sms_lists_move_update"]
    post?: never
    delete?: never
    options?: never
    head?: never
    patch?: never
    trace?: never
  }
  "/v1/contacts/sms/segments/": {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    get: operations["contacts_sms_segments_list"]
    put?: never
    post: operations["contacts_sms_segments_create"]
    delete?: never
    options?: never
    head?: never
    patch?: never
    trace?: never
  }
  "/v1/contacts/sms/segments/{id}/": {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    get: operations["contacts_sms_segments_retrieve"]
    put: operations["contacts_sms_segments_update"]
    post?: never
    delete: operations["contacts_sms_segments_destroy"]
    options?: never
    head?: never
    patch: operations["contacts_sms_segments_partial_update"]
    trace?: never
  }
  "/v1/contacts/sms/upload/": {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    get: operations["contacts_sms_upload_list"]
    put?: never
    post: operations["contacts_sms_upload_create"]
    delete?: never
    options?: never
    head?: never
    patch?: never
    trace?: never
  }
  "/v1/contacts/sms/upload/{id}/": {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    get: operations["contacts_sms_upload_retrieve"]
    put: operations["contacts_sms_upload_update"]
    post?: never
    delete?: never
    options?: never
    head?: never
    patch: operations["contacts_sms_upload_partial_update"]
    trace?: never
  }
  "/v1/contacts/sms/upload/{id}/malformed-contacts/": {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    /** @description The csv generated by this endpoint is something like this:
     *     phone,NAME,any_other_columns,errors
     *     9123456789,John Doe,ant_other_column_values,[a list of errors stringified] */
    get: operations["contacts_sms_upload_malformed_contacts_retrieve"]
    put?: never
    post?: never
    delete?: never
    options?: never
    head?: never
    patch?: never
    trace?: never
  }
  "/v1/contacts/sms/upload/{id}/preview/": {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    get: operations["contacts_sms_upload_preview_retrieve"]
    put?: never
    post?: never
    delete?: never
    options?: never
    head?: never
    patch?: never
    trace?: never
  }
  "/v1/contacts/subscription/": {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    get?: never
    put?: never
    post: operations["contacts_subscription_create"]
    delete?: never
    options?: never
    head?: never
    patch?: never
    trace?: never
  }
  "/v1/contacts/subscription/send-batch/": {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    get?: never
    put?: never
    post: operations["contacts_subscription_send_batch_create"]
    delete?: never
    options?: never
    head?: never
    patch?: never
    trace?: never
  }
  "/v1/contacts/subscription/send-test/": {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    get?: never
    put?: never
    post: operations["contacts_subscription_send_test_create"]
    delete?: never
    options?: never
    head?: never
    patch?: never
    trace?: never
  }
}
export type webhooks = Record<string, never>
export interface components {
  schemas: {
    /**
     * @description * `STRING` - 0
     *     * `INTEGER` - 1
     *     * `FLOAT` - 2
     *     * `BOOLEAN` - 3
     *     * `DATE` - 4
     * @enum {string}
     */
    AttributeValueTypeEnum: "STRING" | "INTEGER" | "FLOAT" | "BOOLEAN" | "DATE"
    BaseSegment: {
      readonly id: number
      name: string
      readonly size: number
      readonly entity_type: components["schemas"]["EntityTypeEnum"]
      /** Format: date-time */
      readonly created_time: string
      /** Format: date-time */
      readonly updated_time: string
      readonly has_active_upload: boolean
      readonly size_calculation_status: components["schemas"]["SizeCalculationStatusEnum"]
    }
    BulkRetrieveBaseSegment: {
      results: components["schemas"]["BaseSegment"][]
    }
    CustomContactAttribute: {
      readonly id: number
      attribute_key: string
      attribute_value_type: components["schemas"]["AttributeValueTypeEnum"]
      is_active?: boolean
    }
    CustomContactAttributeRequest: {
      attribute_key: string
      attribute_value_type: components["schemas"]["AttributeValueTypeEnum"]
      is_active?: boolean
    }
    /**
     * @description * `SEGMENT` - 0
     *     * `LIST` - 1
     * @enum {string}
     */
    EntityTypeEnum: "SEGMENT" | "LIST"
    /**
     * @description * `EQUAL` - 0
     *     * `NOT_EQUAL` - 1
     *     * `STARTS_WITH` - 2
     *     * `ENDS_WITH` - 3
     * @enum {string}
     */
    OperationEnum: "EQUAL" | "NOT_EQUAL" | "STARTS_WITH" | "ENDS_WITH"
    PaginatedBaseSegmentList: {
      /** @example 123 */
      count?: number
      /**
       * Format: uri
       * @example http://api.example.org/accounts/?page=4
       */
      next?: string | null
      /**
       * Format: uri
       * @example http://api.example.org/accounts/?page=2
       */
      previous?: string | null
      results?: components["schemas"]["BaseSegment"][]
    }
    PaginatedCustomContactAttributeList: {
      /** @example 123 */
      count?: number
      /**
       * Format: uri
       * @example http://api.example.org/accounts/?page=4
       */
      next?: string | null
      /**
       * Format: uri
       * @example http://api.example.org/accounts/?page=2
       */
      previous?: string | null
      results?: components["schemas"]["CustomContactAttribute"][]
    }
    PaginatedSmsContactDetailList: {
      /** @example 123 */
      count?: number
      /**
       * Format: uri
       * @example http://api.example.org/accounts/?page=4
       */
      next?: string | null
      /**
       * Format: uri
       * @example http://api.example.org/accounts/?page=2
       */
      previous?: string | null
      results?: components["schemas"]["SmsContactDetail"][]
    }
    PaginatedSmsContactList: {
      /** @example 123 */
      count?: number
      /**
       * Format: uri
       * @example http://api.example.org/accounts/?page=4
       */
      next?: string | null
      /**
       * Format: uri
       * @example http://api.example.org/accounts/?page=2
       */
      previous?: string | null
      results?: components["schemas"]["SmsContact"][]
    }
    PaginatedSmsContactListList: {
      /** @example 123 */
      count?: number
      /**
       * Format: uri
       * @example http://api.example.org/accounts/?page=4
       */
      next?: string | null
      /**
       * Format: uri
       * @example http://api.example.org/accounts/?page=2
       */
      previous?: string | null
      results?: components["schemas"]["SmsContactList"][]
    }
    PaginatedSmsSegmentList: {
      /** @example 123 */
      count?: number
      /**
       * Format: uri
       * @example http://api.example.org/accounts/?page=4
       */
      next?: string | null
      /**
       * Format: uri
       * @example http://api.example.org/accounts/?page=2
       */
      previous?: string | null
      results?: components["schemas"]["SmsSegment"][]
    }
    PaginatedUploadSmsContactFileList: {
      /** @example 123 */
      count?: number
      /**
       * Format: uri
       * @example http://api.example.org/accounts/?page=4
       */
      next?: string | null
      /**
       * Format: uri
       * @example http://api.example.org/accounts/?page=2
       */
      previous?: string | null
      results?: components["schemas"]["UploadSmsContactFile"][]
    }
    PatchedSmsContactDetailRequest: {
      contact?: number
      attribute_type?: number
      string_value?: string | null
      int_value?: number | null
      /** Format: double */
      float_value?: number | null
      boolean_value?: boolean | null
      /** Format: date-time */
      datetime_value?: string | null
    }
    PatchedSmsContactListRequest: {
      name?: string
      is_active?: boolean
    }
    PatchedSmsContactRequest: {
      phone_number?: string
      target_lists?: number[]
    }
    PatchedSmsSegmentRequest: {
      name?: string
      is_active?: boolean
      include_contact_lists?: number[]
      exclude_contact_lists?: number[]
      filters?: components["schemas"]["SegmentFilterRequest"][]
      clicked_campaigns?: unknown
    }
    PatchedUploadSmsContactFileRequest: {
      /** Format: binary */
      csv_file?: string
      target_list?: number | null
      column_to_attribute_mapping?: unknown
      is_approved?: boolean
      total_records_count?: number
      invalid_records_count?: number
      duplicate_records_count?: number
    }
    /**
     * @description * `MAGFA` - 0
     *     * `RAHYAB` - 1
     *     * `ATIE_DADE` - 2
     *     * `ASIATECH` - 3
     *     * `KAVENEGAR` - 4
     *     * `JIRING` - 5
     *     * `ASANAK` - 6
     * @enum {string}
     */
    ProviderEnum:
      | "MAGFA"
      | "RAHYAB"
      | "ATIE_DADE"
      | "ASIATECH"
      | "KAVENEGAR"
      | "JIRING"
      | "ASANAK"
    SegmentFilter: {
      attribute_key: string
      attribute_value_type: components["schemas"]["AttributeValueTypeEnum"]
      filter_value: unknown
      operation: components["schemas"]["OperationEnum"]
    }
    SegmentFilterRequest: {
      attribute_key: string
      attribute_value_type: components["schemas"]["AttributeValueTypeEnum"]
      filter_value: unknown
      operation: components["schemas"]["OperationEnum"]
    }
    SegmentUpdateSize: {
      segment: number
    }
    SegmentUpdateSizeRequest: {
      segment: number
    }
    SegmentsAggregatorSizeAndPages: {
      inclusion_segments: number[]
      exclusion_segments: number[]
      readonly aggregated_segments_size: number
      readonly aggregated_segments_pages: number
      readonly aggregated_segments_cost: number
      text?: string
      provider: components["schemas"]["ProviderEnum"]
    }
    SegmentsAggregatorSizeAndPagesRequest: {
      inclusion_segments: number[]
      exclusion_segments: number[]
      text?: string
      provider: components["schemas"]["ProviderEnum"]
    }
    SendBatch: {
      text: string
      subscription_id: number
      request_size: number
      maximum_budget: number
      batch_id: number
      line: string
      provider: components["schemas"]["ProviderEnum"]
    }
    SendBatchRequest: {
      text: string
      subscription_id: number
      request_size: number
      maximum_budget: number
      batch_id: number
      line: string
      provider: components["schemas"]["ProviderEnum"]
    }
    SendTest: {
      text: string
      maximum_budget: number
      line: string
      provider: components["schemas"]["ProviderEnum"]
      phone_number: string
      send_test_id: number
    }
    SendTestRequest: {
      text: string
      maximum_budget: number
      line: string
      provider: components["schemas"]["ProviderEnum"]
      phone_number: string
      send_test_id: number
    }
    /**
     * @description * `NOT_CALCULATED` - 0
     *     * `CALCULATING` - 1
     *     * `CALCULATED` - 2
     * @enum {string}
     */
    SizeCalculationStatusEnum: "NOT_CALCULATED" | "CALCULATING" | "CALCULATED"
    SmsContact: {
      readonly id: number
      phone_number: string
      target_lists: number[]
      /** Format: date-time */
      readonly created_time: string
      /** Format: date-time */
      readonly updated_time: string
    }
    SmsContactAction: {
      sms_contacts: number[]
      target_list?: number | null
      source_list?: number | null
      custom_attributes?: (number | null)[]
    }
    SmsContactActionRequest: {
      sms_contacts: number[]
      target_list?: number | null
      source_list?: number | null
      custom_attributes?: (number | null)[]
    }
    SmsContactDetail: {
      readonly id: number
      contact: number
      readonly attribute_key: string
      readonly value: string
      readonly value_type: string
    }
    SmsContactDetailRequest: {
      contact: number
      attribute_type: number
      string_value?: string | null
      int_value?: number | null
      /** Format: double */
      float_value?: number | null
      boolean_value?: boolean | null
      /** Format: date-time */
      datetime_value?: string | null
    }
    SmsContactList: {
      readonly id: number
      name: string
      is_active?: boolean
      readonly size: number
      readonly size_calculation_status: components["schemas"]["SizeCalculationStatusEnum"]
      readonly has_active_upload: boolean
    }
    SmsContactListRequest: {
      name: string
      is_active?: boolean
    }
    SmsContactListTransfer: {
      target_list: number
      source_lists: number[]
      remove_sources: boolean
    }
    SmsContactListTransferRequest: {
      target_list: number
      source_lists: number[]
      remove_sources: boolean
    }
    SmsContactRequest: {
      phone_number: string
      target_lists: number[]
    }
    SmsSegment: {
      readonly id: number
      name: string
      is_active?: boolean
      readonly size: number
      filters: components["schemas"]["SegmentFilter"][]
      readonly include_lists: components["schemas"]["SmsContactList"][]
      readonly exclude_lists: components["schemas"]["SmsContactList"][]
      clicked_campaigns?: unknown
    }
    SmsSegmentRequest: {
      name: string
      is_active?: boolean
      include_contact_lists?: number[]
      exclude_contact_lists?: number[]
      filters: components["schemas"]["SegmentFilterRequest"][]
      clicked_campaigns?: unknown
    }
    /**
     * @description * `UPLOADED` - 0
     *     * `PROCESSING` - 1
     *     * `PROCESSED` - 2
     * @enum {string}
     */
    StatusEnum: "UPLOADED" | "PROCESSING" | "PROCESSED"
    Subscription: {
      readonly id: number
      account_id: string
      inclusion_segments: number[]
      exclusion_segments: number[]
      campaign_execution_id?: number
    }
    SubscriptionRequest: {
      inclusion_segments: number[]
      exclusion_segments: number[]
      campaign_execution_id?: number
    }
    UploadFilePreview: {
      readonly preview: unknown
    }
    UploadSmsContactFile: {
      readonly id: number
      target_list?: number | null
      column_to_attribute_mapping?: unknown
      is_approved?: boolean
      readonly status: components["schemas"]["StatusEnum"]
      readonly original_filename: string
      readonly target_list_data: components["schemas"]["SmsContactList"]
      /** Format: date-time */
      readonly created_time: string
      total_records_count?: number
      invalid_records_count?: number
      readonly is_content_deleted: boolean
      duplicate_records_count?: number
    }
    UploadSmsContactFileRequest: {
      /** Format: binary */
      csv_file: string
      target_list?: number | null
      column_to_attribute_mapping?: unknown
      is_approved?: boolean
      total_records_count?: number
      invalid_records_count?: number
      duplicate_records_count?: number
    }
  }
  responses: never
  parameters: never
  requestBodies: never
  headers: never
  pathItems: never
}
export type $defs = Record<string, never>
export interface operations {
  contacts_sms_base_list: {
    parameters: {
      query?: {
        /** @description Which field to use when ordering the results. */
        ordering?: string
        /** @description A page number within the paginated result set. */
        page?: number
        /** @description Number of results to return per page. */
        page_size?: number
        /** @description A search term. */
        search?: string
      }
      header?: never
      path?: never
      cookie?: never
    }
    requestBody?: never
    responses: {
      200: {
        headers: {
          [name: string]: unknown
        }
        content: {
          "application/json": components["schemas"]["PaginatedBaseSegmentList"]
        }
      }
    }
  }
  contacts_sms_base_destroy: {
    parameters: {
      query?: never
      header?: never
      path: {
        id: string
      }
      cookie?: never
    }
    requestBody?: never
    responses: {
      /** @description No response body */
      204: {
        headers: {
          [name: string]: unknown
        }
        content?: never
      }
    }
  }
  contacts_sms_base_aggregated_segments_size_and_pages_create: {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    requestBody: {
      content: {
        "application/json": components["schemas"]["SegmentsAggregatorSizeAndPagesRequest"]
        "application/x-www-form-urlencoded": components["schemas"]["SegmentsAggregatorSizeAndPagesRequest"]
        "multipart/form-data": components["schemas"]["SegmentsAggregatorSizeAndPagesRequest"]
      }
    }
    responses: {
      200: {
        headers: {
          [name: string]: unknown
        }
        content: {
          "application/json": components["schemas"]["SegmentsAggregatorSizeAndPages"]
        }
      }
    }
  }
  contacts_sms_base_bulk_retrieve_retrieve: {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    requestBody?: never
    responses: {
      200: {
        headers: {
          [name: string]: unknown
        }
        content: {
          "application/json": components["schemas"]["BulkRetrieveBaseSegment"]
        }
      }
    }
  }
  contacts_sms_base_update_size_create: {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    requestBody: {
      content: {
        "application/json": components["schemas"]["SegmentUpdateSizeRequest"]
        "application/x-www-form-urlencoded": components["schemas"]["SegmentUpdateSizeRequest"]
        "multipart/form-data": components["schemas"]["SegmentUpdateSizeRequest"]
      }
    }
    responses: {
      200: {
        headers: {
          [name: string]: unknown
        }
        content: {
          "application/json": components["schemas"]["SegmentUpdateSize"]
        }
      }
    }
  }
  contacts_sms_contact_list: {
    parameters: {
      query?: {
        /** @description Which field to use when ordering the results. */
        ordering?: string
        /** @description A page number within the paginated result set. */
        page?: number
        /** @description Number of results to return per page. */
        page_size?: number
        /** @description A search term. */
        search?: string
      }
      header?: never
      path?: never
      cookie?: never
    }
    requestBody?: never
    responses: {
      200: {
        headers: {
          [name: string]: unknown
        }
        content: {
          "application/json": components["schemas"]["PaginatedSmsContactList"]
        }
      }
    }
  }
  contacts_sms_contact_create: {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    requestBody: {
      content: {
        "application/json": components["schemas"]["SmsContactRequest"]
        "application/x-www-form-urlencoded": components["schemas"]["SmsContactRequest"]
        "multipart/form-data": components["schemas"]["SmsContactRequest"]
      }
    }
    responses: {
      201: {
        headers: {
          [name: string]: unknown
        }
        content: {
          "application/json": components["schemas"]["SmsContact"]
        }
      }
    }
  }
  contacts_sms_contact_attribute_list: {
    parameters: {
      query?: {
        /** @description Which field to use when ordering the results. */
        ordering?: string
        /** @description A page number within the paginated result set. */
        page?: number
        /** @description Number of results to return per page. */
        page_size?: number
        /** @description A search term. */
        search?: string
      }
      header?: never
      path?: never
      cookie?: never
    }
    requestBody?: never
    responses: {
      200: {
        headers: {
          [name: string]: unknown
        }
        content: {
          "application/json": components["schemas"]["PaginatedCustomContactAttributeList"]
        }
      }
    }
  }
  contacts_sms_contact_attribute_create: {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    requestBody: {
      content: {
        "application/json": components["schemas"]["CustomContactAttributeRequest"]
        "application/x-www-form-urlencoded": components["schemas"]["CustomContactAttributeRequest"]
        "multipart/form-data": components["schemas"]["CustomContactAttributeRequest"]
      }
    }
    responses: {
      201: {
        headers: {
          [name: string]: unknown
        }
        content: {
          "application/json": components["schemas"]["CustomContactAttribute"]
        }
      }
    }
  }
  contacts_sms_contact_attribute_retrieve: {
    parameters: {
      query?: never
      header?: never
      path: {
        id: string
      }
      cookie?: never
    }
    requestBody?: never
    responses: {
      200: {
        headers: {
          [name: string]: unknown
        }
        content: {
          "application/json": components["schemas"]["CustomContactAttribute"]
        }
      }
    }
  }
  contacts_sms_contact_detail_list: {
    parameters: {
      query?: {
        /** @description A page number within the paginated result set. */
        page?: number
        /** @description Number of results to return per page. */
        page_size?: number
      }
      header?: never
      path?: never
      cookie?: never
    }
    requestBody?: never
    responses: {
      200: {
        headers: {
          [name: string]: unknown
        }
        content: {
          "application/json": components["schemas"]["PaginatedSmsContactDetailList"]
        }
      }
    }
  }
  contacts_sms_contact_detail_create: {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    requestBody: {
      content: {
        "application/json": components["schemas"]["SmsContactDetailRequest"]
        "application/x-www-form-urlencoded": components["schemas"]["SmsContactDetailRequest"]
        "multipart/form-data": components["schemas"]["SmsContactDetailRequest"]
      }
    }
    responses: {
      201: {
        headers: {
          [name: string]: unknown
        }
        content: {
          "application/json": components["schemas"]["SmsContactDetail"]
        }
      }
    }
  }
  contacts_sms_contact_detail_retrieve: {
    parameters: {
      query?: never
      header?: never
      path: {
        id: string
      }
      cookie?: never
    }
    requestBody?: never
    responses: {
      200: {
        headers: {
          [name: string]: unknown
        }
        content: {
          "application/json": components["schemas"]["SmsContactDetail"]
        }
      }
    }
  }
  contacts_sms_contact_detail_update: {
    parameters: {
      query?: never
      header?: never
      path: {
        id: string
      }
      cookie?: never
    }
    requestBody: {
      content: {
        "application/json": components["schemas"]["SmsContactDetailRequest"]
        "application/x-www-form-urlencoded": components["schemas"]["SmsContactDetailRequest"]
        "multipart/form-data": components["schemas"]["SmsContactDetailRequest"]
      }
    }
    responses: {
      200: {
        headers: {
          [name: string]: unknown
        }
        content: {
          "application/json": components["schemas"]["SmsContactDetail"]
        }
      }
    }
  }
  contacts_sms_contact_detail_destroy: {
    parameters: {
      query?: never
      header?: never
      path: {
        id: string
      }
      cookie?: never
    }
    requestBody?: never
    responses: {
      /** @description No response body */
      204: {
        headers: {
          [name: string]: unknown
        }
        content?: never
      }
    }
  }
  contacts_sms_contact_detail_partial_update: {
    parameters: {
      query?: never
      header?: never
      path: {
        id: string
      }
      cookie?: never
    }
    requestBody?: {
      content: {
        "application/json": components["schemas"]["PatchedSmsContactDetailRequest"]
        "application/x-www-form-urlencoded": components["schemas"]["PatchedSmsContactDetailRequest"]
        "multipart/form-data": components["schemas"]["PatchedSmsContactDetailRequest"]
      }
    }
    responses: {
      200: {
        headers: {
          [name: string]: unknown
        }
        content: {
          "application/json": components["schemas"]["SmsContactDetail"]
        }
      }
    }
  }
  contacts_sms_contact_retrieve: {
    parameters: {
      query?: never
      header?: never
      path: {
        id: string
      }
      cookie?: never
    }
    requestBody?: never
    responses: {
      200: {
        headers: {
          [name: string]: unknown
        }
        content: {
          "application/json": components["schemas"]["SmsContact"]
        }
      }
    }
  }
  contacts_sms_contact_update: {
    parameters: {
      query?: never
      header?: never
      path: {
        id: string
      }
      cookie?: never
    }
    requestBody: {
      content: {
        "application/json": components["schemas"]["SmsContactRequest"]
        "application/x-www-form-urlencoded": components["schemas"]["SmsContactRequest"]
        "multipart/form-data": components["schemas"]["SmsContactRequest"]
      }
    }
    responses: {
      200: {
        headers: {
          [name: string]: unknown
        }
        content: {
          "application/json": components["schemas"]["SmsContact"]
        }
      }
    }
  }
  contacts_sms_contact_destroy: {
    parameters: {
      query?: never
      header?: never
      path: {
        id: string
      }
      cookie?: never
    }
    requestBody?: never
    responses: {
      /** @description No response body */
      204: {
        headers: {
          [name: string]: unknown
        }
        content?: never
      }
    }
  }
  contacts_sms_contact_partial_update: {
    parameters: {
      query?: never
      header?: never
      path: {
        id: string
      }
      cookie?: never
    }
    requestBody?: {
      content: {
        "application/json": components["schemas"]["PatchedSmsContactRequest"]
        "application/x-www-form-urlencoded": components["schemas"]["PatchedSmsContactRequest"]
        "multipart/form-data": components["schemas"]["PatchedSmsContactRequest"]
      }
    }
    responses: {
      200: {
        headers: {
          [name: string]: unknown
        }
        content: {
          "application/json": components["schemas"]["SmsContact"]
        }
      }
    }
  }
  contacts_sms_contact_copy_create: {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    requestBody: {
      content: {
        "application/json": components["schemas"]["SmsContactActionRequest"]
        "application/x-www-form-urlencoded": components["schemas"]["SmsContactActionRequest"]
        "multipart/form-data": components["schemas"]["SmsContactActionRequest"]
      }
    }
    responses: {
      200: {
        headers: {
          [name: string]: unknown
        }
        content: {
          "application/json": components["schemas"]["SmsContactAction"]
        }
      }
    }
  }
  contacts_sms_contact_delete_create: {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    requestBody: {
      content: {
        "application/json": components["schemas"]["SmsContactActionRequest"]
        "application/x-www-form-urlencoded": components["schemas"]["SmsContactActionRequest"]
        "multipart/form-data": components["schemas"]["SmsContactActionRequest"]
      }
    }
    responses: {
      200: {
        headers: {
          [name: string]: unknown
        }
        content: {
          "application/json": components["schemas"]["SmsContactAction"]
        }
      }
    }
  }
  contacts_sms_contact_download_csv_create: {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    requestBody: {
      content: {
        "application/json": components["schemas"]["SmsContactActionRequest"]
        "application/x-www-form-urlencoded": components["schemas"]["SmsContactActionRequest"]
        "multipart/form-data": components["schemas"]["SmsContactActionRequest"]
      }
    }
    responses: {
      200: {
        headers: {
          [name: string]: unknown
        }
        content: {
          "application/json": components["schemas"]["SmsContactAction"]
        }
      }
    }
  }
  contacts_sms_contact_move_create: {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    requestBody: {
      content: {
        "application/json": components["schemas"]["SmsContactActionRequest"]
        "application/x-www-form-urlencoded": components["schemas"]["SmsContactActionRequest"]
        "multipart/form-data": components["schemas"]["SmsContactActionRequest"]
      }
    }
    responses: {
      200: {
        headers: {
          [name: string]: unknown
        }
        content: {
          "application/json": components["schemas"]["SmsContactAction"]
        }
      }
    }
  }
  contacts_sms_lists_list: {
    parameters: {
      query?: {
        /** @description Which field to use when ordering the results. */
        ordering?: string
        /** @description A page number within the paginated result set. */
        page?: number
        /** @description Number of results to return per page. */
        page_size?: number
        /** @description A search term. */
        search?: string
      }
      header?: never
      path?: never
      cookie?: never
    }
    requestBody?: never
    responses: {
      200: {
        headers: {
          [name: string]: unknown
        }
        content: {
          "application/json": components["schemas"]["PaginatedSmsContactListList"]
        }
      }
    }
  }
  contacts_sms_lists_create: {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    requestBody: {
      content: {
        "application/json": components["schemas"]["SmsContactListRequest"]
        "application/x-www-form-urlencoded": components["schemas"]["SmsContactListRequest"]
        "multipart/form-data": components["schemas"]["SmsContactListRequest"]
      }
    }
    responses: {
      201: {
        headers: {
          [name: string]: unknown
        }
        content: {
          "application/json": components["schemas"]["SmsContactList"]
        }
      }
    }
  }
  contacts_sms_lists_retrieve: {
    parameters: {
      query?: never
      header?: never
      path: {
        id: string
      }
      cookie?: never
    }
    requestBody?: never
    responses: {
      200: {
        headers: {
          [name: string]: unknown
        }
        content: {
          "application/json": components["schemas"]["SmsContactList"]
        }
      }
    }
  }
  contacts_sms_lists_update: {
    parameters: {
      query?: never
      header?: never
      path: {
        id: string
      }
      cookie?: never
    }
    requestBody: {
      content: {
        "application/json": components["schemas"]["SmsContactListRequest"]
        "application/x-www-form-urlencoded": components["schemas"]["SmsContactListRequest"]
        "multipart/form-data": components["schemas"]["SmsContactListRequest"]
      }
    }
    responses: {
      200: {
        headers: {
          [name: string]: unknown
        }
        content: {
          "application/json": components["schemas"]["SmsContactList"]
        }
      }
    }
  }
  contacts_sms_lists_destroy: {
    parameters: {
      query?: {
        delete_with_contacts?: string
      }
      header?: never
      path: {
        id: string
      }
      cookie?: never
    }
    requestBody?: never
    responses: {
      /** @description No response body */
      204: {
        headers: {
          [name: string]: unknown
        }
        content?: never
      }
    }
  }
  contacts_sms_lists_partial_update: {
    parameters: {
      query?: never
      header?: never
      path: {
        id: string
      }
      cookie?: never
    }
    requestBody?: {
      content: {
        "application/json": components["schemas"]["PatchedSmsContactListRequest"]
        "application/x-www-form-urlencoded": components["schemas"]["PatchedSmsContactListRequest"]
        "multipart/form-data": components["schemas"]["PatchedSmsContactListRequest"]
      }
    }
    responses: {
      200: {
        headers: {
          [name: string]: unknown
        }
        content: {
          "application/json": components["schemas"]["SmsContactList"]
        }
      }
    }
  }
  contacts_sms_lists_move_update: {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    requestBody: {
      content: {
        "application/json": components["schemas"]["SmsContactListTransferRequest"]
        "application/x-www-form-urlencoded": components["schemas"]["SmsContactListTransferRequest"]
        "multipart/form-data": components["schemas"]["SmsContactListTransferRequest"]
      }
    }
    responses: {
      200: {
        headers: {
          [name: string]: unknown
        }
        content: {
          "application/json": components["schemas"]["SmsContactListTransfer"]
        }
      }
    }
  }
  contacts_sms_segments_list: {
    parameters: {
      query?: {
        /** @description Which field to use when ordering the results. */
        ordering?: string
        /** @description A page number within the paginated result set. */
        page?: number
        /** @description Number of results to return per page. */
        page_size?: number
        /** @description A search term. */
        search?: string
      }
      header?: never
      path?: never
      cookie?: never
    }
    requestBody?: never
    responses: {
      200: {
        headers: {
          [name: string]: unknown
        }
        content: {
          "application/json": components["schemas"]["PaginatedSmsSegmentList"]
        }
      }
    }
  }
  contacts_sms_segments_create: {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    requestBody: {
      content: {
        "application/json": components["schemas"]["SmsSegmentRequest"]
        "application/x-www-form-urlencoded": components["schemas"]["SmsSegmentRequest"]
        "multipart/form-data": components["schemas"]["SmsSegmentRequest"]
      }
    }
    responses: {
      201: {
        headers: {
          [name: string]: unknown
        }
        content: {
          "application/json": components["schemas"]["SmsSegment"]
        }
      }
    }
  }
  contacts_sms_segments_retrieve: {
    parameters: {
      query?: never
      header?: never
      path: {
        id: string
      }
      cookie?: never
    }
    requestBody?: never
    responses: {
      200: {
        headers: {
          [name: string]: unknown
        }
        content: {
          "application/json": components["schemas"]["SmsSegment"]
        }
      }
    }
  }
  contacts_sms_segments_update: {
    parameters: {
      query?: never
      header?: never
      path: {
        id: string
      }
      cookie?: never
    }
    requestBody: {
      content: {
        "application/json": components["schemas"]["SmsSegmentRequest"]
        "application/x-www-form-urlencoded": components["schemas"]["SmsSegmentRequest"]
        "multipart/form-data": components["schemas"]["SmsSegmentRequest"]
      }
    }
    responses: {
      200: {
        headers: {
          [name: string]: unknown
        }
        content: {
          "application/json": components["schemas"]["SmsSegment"]
        }
      }
    }
  }
  contacts_sms_segments_destroy: {
    parameters: {
      query?: never
      header?: never
      path: {
        id: string
      }
      cookie?: never
    }
    requestBody?: never
    responses: {
      /** @description No response body */
      204: {
        headers: {
          [name: string]: unknown
        }
        content?: never
      }
    }
  }
  contacts_sms_segments_partial_update: {
    parameters: {
      query?: never
      header?: never
      path: {
        id: string
      }
      cookie?: never
    }
    requestBody?: {
      content: {
        "application/json": components["schemas"]["PatchedSmsSegmentRequest"]
        "application/x-www-form-urlencoded": components["schemas"]["PatchedSmsSegmentRequest"]
        "multipart/form-data": components["schemas"]["PatchedSmsSegmentRequest"]
      }
    }
    responses: {
      200: {
        headers: {
          [name: string]: unknown
        }
        content: {
          "application/json": components["schemas"]["SmsSegment"]
        }
      }
    }
  }
  contacts_sms_upload_list: {
    parameters: {
      query?: {
        /** @description Which field to use when ordering the results. */
        ordering?: string
        /** @description A page number within the paginated result set. */
        page?: number
        /** @description Number of results to return per page. */
        page_size?: number
        /** @description A search term. */
        search?: string
      }
      header?: never
      path?: never
      cookie?: never
    }
    requestBody?: never
    responses: {
      200: {
        headers: {
          [name: string]: unknown
        }
        content: {
          "application/json": components["schemas"]["PaginatedUploadSmsContactFileList"]
        }
      }
    }
  }
  contacts_sms_upload_create: {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    requestBody: {
      content: {
        "application/json": components["schemas"]["UploadSmsContactFileRequest"]
        "application/x-www-form-urlencoded": components["schemas"]["UploadSmsContactFileRequest"]
        "multipart/form-data": components["schemas"]["UploadSmsContactFileRequest"]
      }
    }
    responses: {
      201: {
        headers: {
          [name: string]: unknown
        }
        content: {
          "application/json": components["schemas"]["UploadSmsContactFile"]
        }
      }
    }
  }
  contacts_sms_upload_retrieve: {
    parameters: {
      query?: never
      header?: never
      path: {
        id: string
      }
      cookie?: never
    }
    requestBody?: never
    responses: {
      200: {
        headers: {
          [name: string]: unknown
        }
        content: {
          "application/json": components["schemas"]["UploadSmsContactFile"]
        }
      }
    }
  }
  contacts_sms_upload_update: {
    parameters: {
      query?: never
      header?: never
      path: {
        id: string
      }
      cookie?: never
    }
    requestBody: {
      content: {
        "application/json": components["schemas"]["UploadSmsContactFileRequest"]
        "application/x-www-form-urlencoded": components["schemas"]["UploadSmsContactFileRequest"]
        "multipart/form-data": components["schemas"]["UploadSmsContactFileRequest"]
      }
    }
    responses: {
      200: {
        headers: {
          [name: string]: unknown
        }
        content: {
          "application/json": components["schemas"]["UploadSmsContactFile"]
        }
      }
    }
  }
  contacts_sms_upload_partial_update: {
    parameters: {
      query?: never
      header?: never
      path: {
        id: string
      }
      cookie?: never
    }
    requestBody?: {
      content: {
        "application/json": components["schemas"]["PatchedUploadSmsContactFileRequest"]
        "application/x-www-form-urlencoded": components["schemas"]["PatchedUploadSmsContactFileRequest"]
        "multipart/form-data": components["schemas"]["PatchedUploadSmsContactFileRequest"]
      }
    }
    responses: {
      200: {
        headers: {
          [name: string]: unknown
        }
        content: {
          "application/json": components["schemas"]["UploadSmsContactFile"]
        }
      }
    }
  }
  contacts_sms_upload_malformed_contacts_retrieve: {
    parameters: {
      query?: never
      header?: never
      path: {
        id: string
      }
      cookie?: never
    }
    requestBody?: never
    responses: {
      200: {
        headers: {
          [name: string]: unknown
        }
        content: {
          "application/json": components["schemas"]["UploadSmsContactFile"]
        }
      }
    }
  }
  contacts_sms_upload_preview_retrieve: {
    parameters: {
      query?: never
      header?: never
      path: {
        id: string
      }
      cookie?: never
    }
    requestBody?: never
    responses: {
      200: {
        headers: {
          [name: string]: unknown
        }
        content: {
          "application/json": components["schemas"]["UploadFilePreview"]
        }
      }
    }
  }
  contacts_subscription_create: {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    requestBody: {
      content: {
        "application/json": components["schemas"]["SubscriptionRequest"]
        "application/x-www-form-urlencoded": components["schemas"]["SubscriptionRequest"]
        "multipart/form-data": components["schemas"]["SubscriptionRequest"]
      }
    }
    responses: {
      201: {
        headers: {
          [name: string]: unknown
        }
        content: {
          "application/json": components["schemas"]["Subscription"]
        }
      }
    }
  }
  contacts_subscription_send_batch_create: {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    requestBody: {
      content: {
        "application/json": components["schemas"]["SendBatchRequest"]
        "application/x-www-form-urlencoded": components["schemas"]["SendBatchRequest"]
        "multipart/form-data": components["schemas"]["SendBatchRequest"]
      }
    }
    responses: {
      200: {
        headers: {
          [name: string]: unknown
        }
        content: {
          "application/json": components["schemas"]["SendBatch"]
        }
      }
    }
  }
  contacts_subscription_send_test_create: {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    requestBody: {
      content: {
        "application/json": components["schemas"]["SendTestRequest"]
        "application/x-www-form-urlencoded": components["schemas"]["SendTestRequest"]
        "multipart/form-data": components["schemas"]["SendTestRequest"]
      }
    }
    responses: {
      200: {
        headers: {
          [name: string]: unknown
        }
        content: {
          "application/json": components["schemas"]["SendTest"]
        }
      }
    }
  }
}
